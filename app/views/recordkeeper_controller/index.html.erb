<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>RecordKeeper Demo</title>
  <link rel="stylesheet" href="assets/stylesheet.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="assets/prism.css">
  <script src='assets/prism.js'></script>
  <script src='assets/script.js'></script>
  <link rel="icon" type="image/png" href="./assets/favicon.png" />
</head>
<body>
<div class="main-head">
  <div class='title'>
  </div>
    <h1>RecordKeeper Demo</h1>
    <a href="/">Go Back home</a>
    <h2>This Demo showcases RecordKeepr, an independant project from Trails, RecordKeeper is a Ruby ORM for PostgreSQL</h2>

  <h3>Here is the database schema for this demo</h3>
  <div class='fdemos'>

  <h3 style='font-size: 20px;line-height:1.5em;margin-right: 10%;'>This demo is a TODOs App, each TODO has a title and a body, and may have many subtasks. These subtasks have associations to User and TODOs.below is a snippet of code on how a new row is inserted and how belongs_to associations are made</h4>
  <br><br><br>
  <div class='fdemos'>
    <div class='flash'>
    
    <p style="color:white; font-size: 20px;">You can add and remove TODOs in the demo below</p>
        <form action="/todos" method='post'>
          <label>Title
            <input type="text" name='title'>
          </label>
          <label>Body
            <input type="text" name='body'>
          </label>
          <input type="submit" value='Add New Task'>
        </form>
    <% @todos.each do |todo,subtasks| %>
    <ul style='list-style: none; text-align: left'>
        <form action="todos" method='post'>
        <input type="hidden" value='delete' name='method'>
        <input type="hidden" value=<%= todo.id %> name='id'>
      <li><h3 style="font-size:25px;"><%= todo.title %> <input class='xbtn' type='submit' value="X"></h4>
        <h5 style='margin-left: 15px;'><%= todo.body %></h5>
        </form>
        <h6 style="font-size: 14px; color: white;">
        <%= "Subtasks:" unless subtasks.empty? %>
        </h6>
        <ul style='list-style: none;'>
          <% subtasks.each do |subtask| %>
            <li>
            <form action="subtasks" method='post'>
              <input type="hidden" value='delete' name='method'>
              <input type="hidden" value=<%= subtask.id %> name='id'>
              <%= subtask.content %> <input class='xbtn' type="submit" value='X'>
            </form>
            </li>
          <% end %>
          <form action="subtasks" method='post'>
          <input type="text" name='content'>
          <input type="hidden" name='id' value=<%= todo.id %> >
          <input type="submit" value='Add New Subtask'>
          </form>
        </ul>
      </li>
    </ul>
    <% end %>
    </div>
    </div>
</div>

<div class='fcode'>

  <pre >
      <code class="language-sql">
todos (
  id INTEGER PRIMARY KEY,
  title VARCHAR(50) NOT NULL,
  body VARCHAR(50),
  user_id INTEGER,

  FOREIGN KEY(user_id) REFERENCES user(id)
);

subtasks (
  id INTEGER PRIMARY KEY,
  content VARCHAR(50) NOT NULL,
  todo_id INTEGER,

  FOREIGN KEY(todo_id) REFERENCES todos(id)
);
      </code>
    </pre>
</div>

    <div class='fcode'>




<p>Thanks to RecordKeeper, the data above was generated simply by the following code</p>
    <pre style='min-height: 10vh'>
      <code class="language-ruby">
  @todos = {}
  Todo.all.each do |todo|
    @todos[todo] = todo.subtasks
  end
      </code>
    </pre>
  <p>The association for how a subtask belongs to a Todo is simply defined like this</p>

    <pre style='min-height: 10vh'><code class='language-ruby'>
  #...subtask.rb
  belongs_to(:todo,{
  primary_key: :id,
  foreign_key: :todo_id,
  class_name: "Todo"
      })</code></pre>

     <p>And creating New Todos and subtasks are as simple as creating a new instance of the model class and saving it </p>
    <pre >
      <code class="language-ruby">
#...TODO:
class TodosController < ControllerBase
  def create
    todo = Todo.new(body: params["body"],
     title: params["title"])

    todo.save
    self.redirect_to('recordkeeper')
  end
end


#...Subtasks:
class SubtasksController < ControllerBase
  def create
    subtask = Subtask.new(content: params["content"], 
    todo_id: params['id'])
    subtask.save
    redirect_to('recordkeeper')
  end
end
      </code>
    </pre>
    </div>

  <h1 style='color: white;border-top: 1px solid black;padding-top: 20px;'>Here is the source code for inserting new records and associations</h1>
  <div class='fcode' style='width: 50vw'>
  <pre >
      <code class="language-ruby">
  #...record_keeper.rb
def insert
    cols = self.class.columns.dup
    cols.delete(:id)
    attributes = self.attribute_values(cols)
    # qmarks= (["?"]* cols.count).join(", ")
    qmarks = []
    cols.count.times do |i|
      qmarks << "$#{i+1}"
    end
    qmarks = qmarks.join(", ")
    cols = cols.map(&:to_s).join(", ")

    insert = DBConnection.execute(<<-SQL,attributes)
      INSERT INTO
        #{self.class.table_name} (#{cols})
      values
        (#{qmarks})
      RETURNING
        id
    SQL

    self.id = insert[0]['id']
    self
  end

  #...associations.rb
module Associations

def belongs_to(name, options = {})
  self.assoc_options[name] = BelongsToOptions.new(name,options)
  define_method(name) do
    options = self.class.assoc_options[name]
    foreign_key = self.send(options.foreign_key)
    options.model_class.where(options.primary_key => 
    foreign_key).first
  end
end</code>
</pre>
      </div>

</body>
</div>
</html>